{"ast":null,"code":"var _jsxFileName = \"/Users/abhisheksharma/Downloads/react-website-v1-master/src/components/pages/Products.js\";\nimport React, { useState } from 'react';\nimport '../../App.css';\nimport { Pdfdata } from \"./Pdf/Pdfdata\";\nimport \"./Pdf/Pdf.css\";\nexport default function Pdf() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  }, Pdfdata.filter(val => {\n    let value = \"\";\n\n    if (searchTerm === \"\") {\n      value = val;\n    } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase()) || val.category.toLowerCase().includes(searchTerm.toLowerCase())) {\n      value = val;\n    }\n\n    return value;\n  }).map((val, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"pdf\",\n      src: val.src,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, val.name)));\n  }))));\n}","map":{"version":3,"sources":["/Users/abhisheksharma/Downloads/react-website-v1-master/src/components/pages/Products.js"],"names":["React","useState","Pdfdata","Pdf","searchTerm","setSearchTerm","event","target","value","filter","val","name","toLowerCase","includes","category","map","key","src"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,OAAO,eAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,QAFhB;AAII,IAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBD,MAAAA,aAAa,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,eAWF;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,OAAO,CAACO,MAAR,CAAgBC,GAAD,IAAS;AACvB,QAAIF,KAAK,GAAG,EAAZ;;AACA,QAAIJ,UAAU,KAAK,EAAnB,EAAuB;AACrBI,MAAAA,KAAK,GAAGE,GAAR;AACD,KAFD,MAEO,IACLA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCT,UAAU,CAACQ,WAAX,EAAhC,KACAF,GAAG,CAACI,QAAJ,CAAaF,WAAb,GAA2BC,QAA3B,CAAoCT,UAAU,CAACQ,WAAX,EAApC,CAFK,EAGL;AACAJ,MAAAA,KAAK,GAAGE,GAAR;AACD;;AACD,WAAOF,KAAP;AACD,GAXA,EAWEO,GAXF,CAWM,CAACL,GAAD,EAAMM,GAAN,KAAc;AACnB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,GAAG,EAAEA,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAEN,GAAG,CAACO,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,GAAG,CAACC,IAAR,CAHF,CADF,CADF;AAUD,GAtBA,CADF,CADH,CAXE,CADF;AA0CD","sourcesContent":["import React, { useState }  from 'react';\nimport '../../App.css';\nimport {Pdfdata} from \"./Pdf/Pdfdata\";\nimport \"./Pdf/Pdf.css\";\n\nexport default function Pdf() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return(\n    <div className=\"container\">\n    <div className=\"search\">\n    <input\n        type=\"text\"\n        placeholder=\"search\"\n        \n        onChange={(event) => {\n          setSearchTerm(event.target.value);\n        }}\n      />\n    </div> \n  <div className=\"grid-container\">\n     <div className=\"row center\">\n      {Pdfdata.filter((val) => {\n        let value = \"\";\n        if (searchTerm === \"\") {\n          value = val;\n        } else if (\n          val.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          val.category.toLowerCase().includes(searchTerm.toLowerCase())\n        ) {\n          value = val;\n        }\n        return value;\n      }).map((val, key) => {\n        return (\n          <div >           \n            <div  id=\"user\" key={key}>\n              \n              <iframe className=\"pdf\" src={val.src} />\n              <p>{val.name}</p>\n              \n            </div>\n          </div>\n        );\n      })}\n      </div>\n     </div>\n     </div>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}